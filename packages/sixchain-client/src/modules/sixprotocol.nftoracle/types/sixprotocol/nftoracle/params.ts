// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               unknown
// source: sixprotocol/nftoracle/params.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { Duration } from "../../google/protobuf/duration";

export const protobufPackage = "sixprotocol.nftoracle";

/** Params defines the parameters for the module. */
export interface Params {
  mintRequestActiveDuration: Duration | undefined;
  actionRequestActiveDuration: Duration | undefined;
  verifyRequestActiveDuration: Duration | undefined;
  actionSignerActiveDuration: Duration | undefined;
  syncActionSignerActiveDuration: Duration | undefined;
}

function createBaseParams(): Params {
  return {
    mintRequestActiveDuration: undefined,
    actionRequestActiveDuration: undefined,
    verifyRequestActiveDuration: undefined,
    actionSignerActiveDuration: undefined,
    syncActionSignerActiveDuration: undefined,
  };
}

export const Params: MessageFns<Params> = {
  encode(message: Params, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.mintRequestActiveDuration !== undefined) {
      Duration.encode(message.mintRequestActiveDuration, writer.uint32(10).fork()).join();
    }
    if (message.actionRequestActiveDuration !== undefined) {
      Duration.encode(message.actionRequestActiveDuration, writer.uint32(18).fork()).join();
    }
    if (message.verifyRequestActiveDuration !== undefined) {
      Duration.encode(message.verifyRequestActiveDuration, writer.uint32(26).fork()).join();
    }
    if (message.actionSignerActiveDuration !== undefined) {
      Duration.encode(message.actionSignerActiveDuration, writer.uint32(34).fork()).join();
    }
    if (message.syncActionSignerActiveDuration !== undefined) {
      Duration.encode(message.syncActionSignerActiveDuration, writer.uint32(42).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Params {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseParams();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.mintRequestActiveDuration = Duration.decode(reader, reader.uint32());
          continue;
        }
        case 2: {
          if (tag !== 18) {
            break;
          }

          message.actionRequestActiveDuration = Duration.decode(reader, reader.uint32());
          continue;
        }
        case 3: {
          if (tag !== 26) {
            break;
          }

          message.verifyRequestActiveDuration = Duration.decode(reader, reader.uint32());
          continue;
        }
        case 4: {
          if (tag !== 34) {
            break;
          }

          message.actionSignerActiveDuration = Duration.decode(reader, reader.uint32());
          continue;
        }
        case 5: {
          if (tag !== 42) {
            break;
          }

          message.syncActionSignerActiveDuration = Duration.decode(reader, reader.uint32());
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Params {
    return {
      mintRequestActiveDuration: isSet(object.mintRequestActiveDuration)
        ? Duration.fromJSON(object.mintRequestActiveDuration)
        : undefined,
      actionRequestActiveDuration: isSet(object.actionRequestActiveDuration)
        ? Duration.fromJSON(object.actionRequestActiveDuration)
        : undefined,
      verifyRequestActiveDuration: isSet(object.verifyRequestActiveDuration)
        ? Duration.fromJSON(object.verifyRequestActiveDuration)
        : undefined,
      actionSignerActiveDuration: isSet(object.actionSignerActiveDuration)
        ? Duration.fromJSON(object.actionSignerActiveDuration)
        : undefined,
      syncActionSignerActiveDuration: isSet(object.syncActionSignerActiveDuration)
        ? Duration.fromJSON(object.syncActionSignerActiveDuration)
        : undefined,
    };
  },

  toJSON(message: Params): unknown {
    const obj: any = {};
    if (message.mintRequestActiveDuration !== undefined) {
      obj.mintRequestActiveDuration = Duration.toJSON(message.mintRequestActiveDuration);
    }
    if (message.actionRequestActiveDuration !== undefined) {
      obj.actionRequestActiveDuration = Duration.toJSON(message.actionRequestActiveDuration);
    }
    if (message.verifyRequestActiveDuration !== undefined) {
      obj.verifyRequestActiveDuration = Duration.toJSON(message.verifyRequestActiveDuration);
    }
    if (message.actionSignerActiveDuration !== undefined) {
      obj.actionSignerActiveDuration = Duration.toJSON(message.actionSignerActiveDuration);
    }
    if (message.syncActionSignerActiveDuration !== undefined) {
      obj.syncActionSignerActiveDuration = Duration.toJSON(message.syncActionSignerActiveDuration);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<Params>, I>>(base?: I): Params {
    return Params.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<Params>, I>>(object: I): Params {
    const message = createBaseParams();
    message.mintRequestActiveDuration =
      (object.mintRequestActiveDuration !== undefined && object.mintRequestActiveDuration !== null)
        ? Duration.fromPartial(object.mintRequestActiveDuration)
        : undefined;
    message.actionRequestActiveDuration =
      (object.actionRequestActiveDuration !== undefined && object.actionRequestActiveDuration !== null)
        ? Duration.fromPartial(object.actionRequestActiveDuration)
        : undefined;
    message.verifyRequestActiveDuration =
      (object.verifyRequestActiveDuration !== undefined && object.verifyRequestActiveDuration !== null)
        ? Duration.fromPartial(object.verifyRequestActiveDuration)
        : undefined;
    message.actionSignerActiveDuration =
      (object.actionSignerActiveDuration !== undefined && object.actionSignerActiveDuration !== null)
        ? Duration.fromPartial(object.actionSignerActiveDuration)
        : undefined;
    message.syncActionSignerActiveDuration =
      (object.syncActionSignerActiveDuration !== undefined && object.syncActionSignerActiveDuration !== null)
        ? Duration.fromPartial(object.syncActionSignerActiveDuration)
        : undefined;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
